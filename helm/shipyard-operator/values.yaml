namespace: shipyard-operator-system
deployment:
  name: shipyard-operator-controller-manager
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                  - amd64
                  - arm64
                  - ppc64le
                  - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                  - linux
  containers:
    manager:
      image: eu.gcr.io/stuttgart-things/shipyard-operator
      tag: 23.0414.0535-v0.1.62
      imagePullPolicy: Always
      env:
        ANSIBLE_GATHERING:
          value: explicit
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
      args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
      probes:
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
        limits:
          cpu: 500m
          memory: 128Mi
    kube-rbac-proxy:
      image: gcr.io/kubebuilder/kube-rbac-proxy
      tag: v0.13.1
      args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
      imagePullPolicy: Always
      securityContext:
        capabilities:
          drop:
            - ALL
        allowPrivilegeEscalation: false
        privileged: false
        runAsNonRoot: true
        readOnlyRootFilesystem: true
        # runAsGroup: 1000
        # runAsUser: 1000
        # fsGroup: 2000
      ports:
        https:
          containerPort: 8443
          protocol: TCP
      resources:
        requests:
          cpu: 5m
          memory: 64Mi
        limits:
          cpu: 500m
          memory: 128Mi
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: shipyard-operator
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: shipyard-operator
    control-plane: controller-manager
  selectorLabels:
    control-plane: controller-manager
  replicaCount: 1
  terminationGracePeriodSeconds: 10
  serviceAccount: shipyard-operator-controller-manager
  securityContext:
    runAsNonRoot: true
secrets:
  vault-connection:
    name: vault-connection
    labels:
      app.kubernetes.io/component: manager
      app.kubernetes.io/created-by: shipyard-operator
      app.kubernetes.io/instance: controller-manager
      app.kubernetes.io/part-of: shipyard-operator
    secretKVs:
      VAULT_TOKEN: ${VAULT_TOKEN}
      VAULT_NAMESPACE: ${VAULT_NAMESPACE}
      VAULT_ADDR: ${VAULT_ADDR}
services:
  shipyard-operator-controller-manager-metrics-service:
    labels:
      app.kubernetes.io/component: kube-rbac-proxy
      app.kubernetes.io/created-by: shipyard-operator
      app.kubernetes.io/instance: controller-manager-metrics-service
      app.kubernetes.io/name: service
      app.kubernetes.io/part-of: shipyard-operator
      control-plane: controller-manager
    ports:
      - name: https
        protocol: TCP
        value: https
        expose:
          service:
            type: ClusterIP
            port: 8443
    selectorLabels:
      control-plane: controller-manager
namespaces:
  shipyard-operator-system:
    name: shipyard-operator-system
    labels:
      app.kubernetes.io/component: manager
      app.kubernetes.io/created-by: shipyard-operator
      app.kubernetes.io/instance: system
      app.kubernetes.io/name: namespace
      app.kubernetes.io/part-of: shipyard-operator
      control-plane: controller-manager
# RBAC
serviceAccounts:
  shipyard-operator-controller-manager:
    labels:
      app.kubernetes.io/component: rbac
      app.kubernetes.io/created-by: shipyard-operator
      app.kubernetes.io/instance: controller-manager
      app.kubernetes.io/name: serviceaccount
      app.kubernetes.io/part-of: shipyard-operator
roles:
  shipyard-operator-leader-election-role:
    labels:
      app.kubernetes.io/component: rbac
      app.kubernetes.io/created-by: shipyard-operator
      app.kubernetes.io/instance: leader-election-role
      app.kubernetes.io/name: role
      app.kubernetes.io/part-of: shipyard-operator
    rules:
      - apiGroups:
          - ""
        resources:
          - configmaps
        verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
      - apiGroups:
          - coordination.k8s.io
        resources:
          - leases
        verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
      - apiGroups:
          - ""
        resources:
          - events
        verbs:
          - create
          - patch
roleBindings:
  shipyard-operator-leader-election-rolebinding:
    labels:
      app.kubernetes.io/component: rbac
      app.kubernetes.io/created-by: shipyard-operator
      app.kubernetes.io/instance: leader-election-rolebinding
      app.kubernetes.io/name: rolebinding
      app.kubernetes.io/part-of: shipyard-operator
    roleRef:
      kind: Role
      name: shipyard-operator-leader-election-role
      apiGroup: rbac.authorization.k8s.io
    subjects:
      - kind: ServiceAccount
        name: shipyard-operator-controller-manager
        namespace: shipyard-operator-system
clusterRoles:
  shipyard-operator-manager-role:
    labels:
      app.kubernetes.io/component: kube-rbac-proxy
      app.kubernetes.io/created-by: shipyard-operator
      app.kubernetes.io/instance: metrics-reader
      app.kubernetes.io/name: clusterrole
      app.kubernetes.io/part-of: shipyard-operator
    rules:
      - apiGroups:
          - shipyard.sthings.tiab.ssc.sva.de
        resources:
          - shipyardterraforms
        verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
      - apiGroups:
          - shipyard.sthings.tiab.ssc.sva.de
        resources:
          - shipyardterraforms/finalizers
        verbs:
          - update
      - apiGroups:
          - shipyard.sthings.tiab.ssc.sva.de
        resources:
          - shipyardterraforms/status
        verbs:
          - get
          - patch
          - update
  shipyard-operator-metrics-reader:
    labels:
      app.kubernetes.io/component: kube-rbac-proxy
      app.kubernetes.io/created-by: shipyard-operator
      app.kubernetes.io/instance: metrics-reader
      app.kubernetes.io/name: clusterrole
      app.kubernetes.io/part-of: shipyard-operator
    rules:
      - nonResourceURLs:
          - /metrics
        verbs:
          - get
  shipyard-operator-proxy-role:
    labels:
      app.kubernetes.io/component: kube-rbac-proxy
      app.kubernetes.io/created-by: shipyard-operator
      app.kubernetes.io/instance: metrics-reader
      app.kubernetes.io/name: clusterrole
      app.kubernetes.io/part-of: shipyard-operator
    rules:
      - apiGroups:
          - authentication.k8s.io
        resources:
          - tokenreviews
        verbs:
          - create
      - apiGroups:
          - authorization.k8s.io
        resources:
          - subjectaccessreviews
        verbs:
          - create
clusterRoleBindings:
  shipyard-operator-manager-rolebinding:
    labels:
      app.kubernetes.io/component: kube-rbac-proxy
      app.kubernetes.io/created-by: shipyard-operator
      app.kubernetes.io/instance: proxy-rolebinding
      app.kubernetes.io/name: clusterrolebinding
      app.kubernetes.io/part-of: shipyard-operator
    roleRef:
      kind: ClusterRole
      name: shipyard-operator-manager-role
      apiGroup: rbac.authorization.k8s.io
    subjects:
      - kind: ServiceAccount
        name: shipyard-operator-controller-manager
        namespace: shipyard-operator-system
